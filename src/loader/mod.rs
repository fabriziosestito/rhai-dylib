//! # Loader.
//!
//! A [`Loader`] is a simple trait that will be used to load a rhai "extension" from a path.
//!
//! An "extension" is a Rhai script or native Rust API that cannot be loaded

/// A plugin loader using the [`libloading`](https://github.com/nagisa/rust_libloading) crate.
pub mod dylib;

/// Error generated by a plugin loader.
#[derive(Debug)]
pub enum LoaderError {
    /// Error generated while loading an extension.
    Loading(String),
}

/// A trait to implement an object that load and stores extensions in memory.
pub trait Loader {
    /// Load an extension from a path and apply it to a [`rhai::Engine`].
    fn load(
        &mut self,
        path: impl AsRef<std::path::Path>,
        engine: &mut rhai::Engine,
    ) -> Result<(), LoaderError>;
}
