use rhai_dylib::plugin_loader::{dylib::Libloading, PluginLoader};

#[cfg(not(target_os = "linux"))]
#[cfg(not(target_os = "windows"))]
compile_error!("unsupported platform - only Linux & Windows are supported");

fn main() {
    // Inspect the type id generated by the binary.
    println!(
        "main: {:?}",
        std::any::TypeId::of::<rhai_dylib::rhai::Map>()
    );

    let mut loader = Libloading::new();
    let mut engine = rhai_dylib::rhai::Engine::new();

    // Load the plugin.
    #[cfg(target_os = "linux")]
    loader
        .load("./plugin/target/debug/libplugin.so", &mut engine)
        .expect("failed to load plugin");
    #[cfg(target_os = "windows")]
    loader
        .load("./plugin/target/debug/libplugin.dll", &mut engine)
        .expect("failed to load plugin");

    engine
        .run(
            r"
print_stuff();
debug(triple_add(1, 2, 3));
",
        )
        .expect("failed to execute script");
}
